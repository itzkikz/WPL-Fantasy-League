/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as R404RouteImport } from './routes/404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StandingsIndexRouteImport } from './routes/standings/index'
import { Route as ManagerIndexRouteImport } from './routes/manager/index'
import { Route as StandingsTeamNameRouteImport } from './routes/standings/$teamName'
import { Route as ManagerPickTeamIndexRouteImport } from './routes/manager/pick-team/index'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StandingsIndexRoute = StandingsIndexRouteImport.update({
  id: '/standings/',
  path: '/standings/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManagerIndexRoute = ManagerIndexRouteImport.update({
  id: '/manager/',
  path: '/manager/',
  getParentRoute: () => rootRouteImport,
} as any)
const StandingsTeamNameRoute = StandingsTeamNameRouteImport.update({
  id: '/standings/$teamName',
  path: '/standings/$teamName',
  getParentRoute: () => rootRouteImport,
} as any)
const ManagerPickTeamIndexRoute = ManagerPickTeamIndexRouteImport.update({
  id: '/manager/pick-team/',
  path: '/manager/pick-team/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/login': typeof LoginRoute
  '/standings/$teamName': typeof StandingsTeamNameRoute
  '/manager': typeof ManagerIndexRoute
  '/standings': typeof StandingsIndexRoute
  '/manager/pick-team': typeof ManagerPickTeamIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/login': typeof LoginRoute
  '/standings/$teamName': typeof StandingsTeamNameRoute
  '/manager': typeof ManagerIndexRoute
  '/standings': typeof StandingsIndexRoute
  '/manager/pick-team': typeof ManagerPickTeamIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/login': typeof LoginRoute
  '/standings/$teamName': typeof StandingsTeamNameRoute
  '/manager/': typeof ManagerIndexRoute
  '/standings/': typeof StandingsIndexRoute
  '/manager/pick-team/': typeof ManagerPickTeamIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/login'
    | '/standings/$teamName'
    | '/manager'
    | '/standings'
    | '/manager/pick-team'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/login'
    | '/standings/$teamName'
    | '/manager'
    | '/standings'
    | '/manager/pick-team'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/login'
    | '/standings/$teamName'
    | '/manager/'
    | '/standings/'
    | '/manager/pick-team/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  LoginRoute: typeof LoginRoute
  StandingsTeamNameRoute: typeof StandingsTeamNameRoute
  ManagerIndexRoute: typeof ManagerIndexRoute
  StandingsIndexRoute: typeof StandingsIndexRoute
  ManagerPickTeamIndexRoute: typeof ManagerPickTeamIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/standings/': {
      id: '/standings/'
      path: '/standings'
      fullPath: '/standings'
      preLoaderRoute: typeof StandingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manager/': {
      id: '/manager/'
      path: '/manager'
      fullPath: '/manager'
      preLoaderRoute: typeof ManagerIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/standings/$teamName': {
      id: '/standings/$teamName'
      path: '/standings/$teamName'
      fullPath: '/standings/$teamName'
      preLoaderRoute: typeof StandingsTeamNameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manager/pick-team/': {
      id: '/manager/pick-team/'
      path: '/manager/pick-team'
      fullPath: '/manager/pick-team'
      preLoaderRoute: typeof ManagerPickTeamIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  LoginRoute: LoginRoute,
  StandingsTeamNameRoute: StandingsTeamNameRoute,
  ManagerIndexRoute: ManagerIndexRoute,
  StandingsIndexRoute: StandingsIndexRoute,
  ManagerPickTeamIndexRoute: ManagerPickTeamIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
